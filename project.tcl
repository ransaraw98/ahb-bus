#*****************************************************************************************
# Vivado (TM) v2019.1 (64-bit)
#
# project.tcl: Tcl script for re-creating project 'ahb'
#
# Generated by Vivado on Mon Mar 20 23:12:40 +0530 2023
# IP Build 2548770 on Fri May 24 18:01:18 MDT 2019
#
# This file contains the Vivado Tcl commands for re-creating the project to the state*
# when this script was generated. In order to re-create the project, please source this
# file in the Vivado Tcl Shell.
#
# * Note that the runs in the created project will be configured the same way as the
#   original project, however they will not be launched automatically. To regenerate the
#   run results please launch the synthesis/implementation runs as needed.
#
#*****************************************************************************************
# NOTE: In order to use this script for source control purposes, please make sure that the
#       following files are added to the source control system:-
#
# 1. This project restoration tcl script (project.tcl) that was generated.
#
# 2. The following source(s) files that were local or imported into the original project.
#    (Please see the '$orig_proj_dir' and '$origin_dir' variable setting below at the start of the script)
#
#    "/home/ransara/Documents/ADS/AHB/arbiter.v"
#    "/home/ransara/Documents/ADS/AHB/ahb.srcs/sources_1/imports/AHB/ahb_master.v"
#    "/home/ransara/Documents/ADS/AHB/ahb.srcs/sources_1/imports/AHB/write_mux.v"
#    "/home/ransara/Documents/ADS/AHB/ahb.srcs/sources_1/imports/AHB/ahb_slave.v"
#    "/home/ransara/Documents/ADS/AHB/ahb.srcs/sources_1/imports/AHB/decoder.v"
#    "/home/ransara/Documents/ADS/AHB/ahb.srcs/sources_1/imports/AHB/multiplexor.v"
#    "/home/ransara/Documents/ADS/AHB/ahb.srcs/sources_1/bd/design_1/hdl/design_1_wrapper.v"
#    "/home/ransara/Documents/ADS/AHB/wrapper.v"
#    "/home/ransara/Documents/ADS/AHB/OR.v"
#    "/home/ransara/Documents/ADS/AHB/ahb.srcs/sources_1/imports/AHB/ahb_master_tb.v"
#    "/home/ransara/Documents/ADS/AHB/ahb.srcs/sources_1/imports/AHB/ahb_slave_tb.v"
#    "/home/ransara/Documents/ADS/AHB/ahb.srcs/sources_1/imports/AHB/ahb_top.v"
#    "/home/ransara/Documents/ADS/AHB/ahb.srcs/sources_1/imports/AHB/ahb_top_tb.v"
#    "/home/ransara/Documents/ADS/AHB/arbiter_tb.v"
#    "/home/ransara/Documents/ADS/AHB/ahb.srcs/sources_1/imports/AHB/decoder_tb.v"
#    "/home/ransara/Documents/ADS/AHB/ahb.srcs/sources_1/imports/AHB/multiplexor_tb.v"
#    "/home/ransara/Documents/ADS/AHB/ahb.srcs/sources_1/imports/AHB/one_master_slave.v"
#    "/home/ransara/Documents/ADS/AHB/ahb.srcs/sources_1/imports/AHB/one_master_slave_tb.v"
#    "/home/ransara/Documents/ADS/AHB/ahb.srcs/sim_1/imports/AHB/wrapper_tb.v"
#    "/home/ransara/Documents/ADS/AHB/ahb_master_tb_behav.wcfg"
#    "/home/ransara/Documents/ADS/AHB/arbiter_tb_behav.wcfg"
#    "/home/ransara/Documents/ADS/AHB/wrapper_tb_behav.wcfg"
#    "/home/ransara/Documents/ADS/AHB/ahb_slave_tb_behav.wcfg"
#
# 3. The following remote source files that were added to the original project:-
#
#    <none>
#
#*****************************************************************************************

# Set the reference directory for source file relative paths (by default the value is script directory path)
set origin_dir "/home/ransara/Documents/ADS/AHB"

# Use origin directory path location variable, if specified in the tcl shell
if { [info exists ::origin_dir_loc] } {
  set origin_dir $::origin_dir_loc
}

# Set the project name
set _xil_proj_name_ "ahb"

# Use project name variable, if specified in the tcl shell
if { [info exists ::user_project_name] } {
  set _xil_proj_name_ $::user_project_name
}

variable script_file
set script_file "project.tcl"

# Help information for this script
proc print_help {} {
  variable script_file
  puts "\nDescription:"
  puts "Recreate a Vivado project from this script. The created project will be"
  puts "functionally equivalent to the original project for which this script was"
  puts "generated. The script contains commands for creating a project, filesets,"
  puts "runs, adding/importing sources and setting properties on various objects.\n"
  puts "Syntax:"
  puts "$script_file"
  puts "$script_file -tclargs \[--origin_dir <path>\]"
  puts "$script_file -tclargs \[--project_name <name>\]"
  puts "$script_file -tclargs \[--help\]\n"
  puts "Usage:"
  puts "Name                   Description"
  puts "-------------------------------------------------------------------------"
  puts "\[--origin_dir <path>\]  Determine source file paths wrt this path. Default"
  puts "                       origin_dir path value is \".\", otherwise, the value"
  puts "                       that was set with the \"-paths_relative_to\" switch"
  puts "                       when this script was generated.\n"
  puts "\[--project_name <name>\] Create project with the specified name. Default"
  puts "                       name is the name of the project from where this"
  puts "                       script was generated.\n"
  puts "\[--help\]               Print help information for this script"
  puts "-------------------------------------------------------------------------\n"
  exit 0
}

if { $::argc > 0 } {
  for {set i 0} {$i < $::argc} {incr i} {
    set option [string trim [lindex $::argv $i]]
    switch -regexp -- $option {
      "--origin_dir"   { incr i; set origin_dir [lindex $::argv $i] }
      "--project_name" { incr i; set _xil_proj_name_ [lindex $::argv $i] }
      "--help"         { print_help }
      default {
        if { [regexp {^-} $option] } {
          puts "ERROR: Unknown option '$option' specified, please type '$script_file -tclargs --help' for usage info.\n"
          return 1
        }
      }
    }
  }
}

# Set the directory path for the original project from where this script was exported
set orig_proj_dir "[file normalize "$origin_dir/"]"

# Create project
create_project ${_xil_proj_name_} ./${_xil_proj_name_} -part xc7z020clg484-1

# Set the directory path for the new project
set proj_dir [get_property directory [current_project]]

# Set project properties
set obj [current_project]
set_property -name "board_part" -value "em.avnet.com:zed:part0:1.4" -objects $obj
set_property -name "default_lib" -value "xil_defaultlib" -objects $obj
set_property -name "dsa.accelerator_binary_content" -value "bitstream" -objects $obj
set_property -name "dsa.accelerator_binary_format" -value "xclbin2" -objects $obj
set_property -name "dsa.board_id" -value "zed" -objects $obj
set_property -name "dsa.description" -value "Vivado generated DSA" -objects $obj
set_property -name "dsa.dr_bd_base_address" -value "0" -objects $obj
set_property -name "dsa.emu_dir" -value "emu" -objects $obj
set_property -name "dsa.flash_interface_type" -value "bpix16" -objects $obj
set_property -name "dsa.flash_offset_address" -value "0" -objects $obj
set_property -name "dsa.flash_size" -value "1024" -objects $obj
set_property -name "dsa.host_architecture" -value "x86_64" -objects $obj
set_property -name "dsa.host_interface" -value "pcie" -objects $obj
set_property -name "dsa.num_compute_units" -value "60" -objects $obj
set_property -name "dsa.platform_state" -value "pre_synth" -objects $obj
set_property -name "dsa.vendor" -value "xilinx" -objects $obj
set_property -name "dsa.version" -value "0.0" -objects $obj
set_property -name "enable_vhdl_2008" -value "1" -objects $obj
set_property -name "ip_cache_permissions" -value "read write" -objects $obj
set_property -name "ip_output_repo" -value "$proj_dir/${_xil_proj_name_}.cache/ip" -objects $obj
set_property -name "mem.enable_memory_map_generation" -value "1" -objects $obj
set_property -name "sim.central_dir" -value "$proj_dir/${_xil_proj_name_}.ip_user_files" -objects $obj
set_property -name "sim.ip.auto_export_scripts" -value "1" -objects $obj
set_property -name "simulator_language" -value "Mixed" -objects $obj
set_property -name "webtalk.activehdl_export_sim" -value "30" -objects $obj
set_property -name "webtalk.ies_export_sim" -value "30" -objects $obj
set_property -name "webtalk.modelsim_export_sim" -value "30" -objects $obj
set_property -name "webtalk.questa_export_sim" -value "30" -objects $obj
set_property -name "webtalk.riviera_export_sim" -value "30" -objects $obj
set_property -name "webtalk.vcs_export_sim" -value "30" -objects $obj
set_property -name "webtalk.xcelium_export_sim" -value "10" -objects $obj
set_property -name "webtalk.xsim_export_sim" -value "30" -objects $obj
set_property -name "webtalk.xsim_launch_sim" -value "321" -objects $obj

# Create 'sources_1' fileset (if not found)
if {[string equal [get_filesets -quiet sources_1] ""]} {
  create_fileset -srcset sources_1
}

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
# Import local files from the original project
set files [list \
 [file normalize "${origin_dir}/arbiter.v" ]\
 [file normalize "${origin_dir}/ahb.srcs/sources_1/imports/AHB/ahb_master.v"]\
 [file normalize "${origin_dir}/ahb.srcs/sources_1/imports/AHB/write_mux.v"]\
 [file normalize "${origin_dir}/ahb.srcs/sources_1/imports/AHB/ahb_slave.v"]\
 [file normalize "${origin_dir}/ahb.srcs/sources_1/imports/AHB/decoder.v"]\
 [file normalize "${origin_dir}/ahb.srcs/sources_1/imports/AHB/multiplexor.v"]\
 [file normalize "${origin_dir}/ahb.srcs/sources_1/bd/design_1/hdl/design_1_wrapper.v" ]\
 [file normalize "${origin_dir}/wrapper.v" ]\
 [file normalize "${origin_dir}/OR.v" ]\
 [file normalize "${origin_dir}/ahb.srcs/sources_1/imports/AHB/ahb_master_tb.v"]\
 [file normalize "${origin_dir}/ahb.srcs/sources_1/imports/AHB/ahb_slave_tb.v"]\
 [file normalize "${origin_dir}/ahb.srcs/sources_1/imports/AHB/ahb_top.v"]\
 [file normalize "${origin_dir}/ahb.srcs/sources_1/imports/AHB/ahb_top_tb.v"]\
 [file normalize "${origin_dir}/arbiter_tb.v" ]\
 [file normalize "${origin_dir}/ahb.srcs/sources_1/imports/AHB/decoder_tb.v"]\
 [file normalize "${origin_dir}/ahb.srcs/sources_1/imports/AHB/multiplexor_tb.v"]\
 [file normalize "${origin_dir}/ahb.srcs/sources_1/imports/AHB/one_master_slave.v"]\
 [file normalize "${origin_dir}/ahb.srcs/sources_1/imports/AHB/one_master_slave_tb.v"]\
]
set imported_files [import_files -fileset sources_1 $files]

# Set 'sources_1' fileset file properties for remote files
# None

# Set 'sources_1' fileset file properties for local files
# None

# Set 'sources_1' fileset properties
set obj [get_filesets sources_1]
set_property -name "top" -value "design_1_wrapper" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj

# Create 'constrs_1' fileset (if not found)
if {[string equal [get_filesets -quiet constrs_1] ""]} {
  create_fileset -constrset constrs_1
}

# Set 'constrs_1' fileset object
set obj [get_filesets constrs_1]

# Empty (no sources present)

# Set 'constrs_1' fileset properties
set obj [get_filesets constrs_1]

# Create 'sim_1' fileset (if not found)
if {[string equal [get_filesets -quiet sim_1] ""]} {
  create_fileset -simset sim_1
}

# Set 'sim_1' fileset object
set obj [get_filesets sim_1]
# Import local files from the original project
set files [list \
 [file normalize "${origin_dir}/ahb.srcs/sim_1/imports/AHB/wrapper_tb.v"]\
 [file normalize "${origin_dir}/ahb_master_tb_behav.wcfg" ]\
 [file normalize "${origin_dir}/arbiter_tb_behav.wcfg" ]\
 [file normalize "${origin_dir}/wrapper_tb_behav.wcfg" ]\
 [file normalize "${origin_dir}/ahb_slave_tb_behav.wcfg" ]\
]
set imported_files [import_files -fileset sim_1 $files]

# Set 'sim_1' fileset file properties for remote files
# None

# Set 'sim_1' fileset file properties for local files
# None

# Set 'sim_1' fileset properties
set obj [get_filesets sim_1]
set_property -name "top" -value "wrapper_tb" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj
set_property -name "top_lib" -value "xil_defaultlib" -objects $obj

# Set 'utils_1' fileset object
set obj [get_filesets utils_1]
# Empty (no sources present)

# Set 'utils_1' fileset properties
set obj [get_filesets utils_1]


# Adding sources referenced in BDs, if not already added
if { [get_files arbiter.v] == "" } {
  import_files -quiet -fileset sources_1 /home/ransara/Documents/ADS/AHB/arbiter.v
}
if { [get_files ahb_master.v] == "" } {
  import_files -quiet -fileset sources_1 /home/ransara/Documents/ADS/AHB/ahb.srcs/sources_1/imports/AHB/ahb_master.v
}
if { [get_files write_mux.v] == "" } {
  import_files -quiet -fileset sources_1 /home/ransara/Documents/ADS/AHB/ahb.srcs/sources_1/imports/AHB/write_mux.v
}
if { [get_files ahb_slave.v] == "" } {
  import_files -quiet -fileset sources_1 /home/ransara/Documents/ADS/AHB/ahb.srcs/sources_1/imports/AHB/ahb_slave.v
}
if { [get_files decoder.v] == "" } {
  import_files -quiet -fileset sources_1 /home/ransara/Documents/ADS/AHB/ahb.srcs/sources_1/imports/AHB/decoder.v
}
if { [get_files multiplexor.v] == "" } {
  import_files -quiet -fileset sources_1 /home/ransara/Documents/ADS/AHB/ahb.srcs/sources_1/imports/AHB/multiplexor.v
}
if { [get_files ahb_slave.v] == "" } {
  import_files -quiet -fileset sources_1 /home/ransara/Documents/ADS/AHB/ahb.srcs/sources_1/imports/AHB/ahb_slave.v
}
if { [get_files ahb_master.v] == "" } {
  import_files -quiet -fileset sources_1 /home/ransara/Documents/ADS/AHB/ahb.srcs/sources_1/imports/AHB/ahb_master.v
}


# Proc to create BD design_1
proc cr_bd_design_1 { parentCell } {
# The design that will be created by this Tcl proc contains the following 
# module references:
# ahb_master, ahb_master, ahb_slave, ahb_slave, arbiter, decoder, multiplexor, write_mux



  # CHANGE DESIGN NAME HERE
  set design_name design_1

  common::send_msg_id "BD_TCL-003" "INFO" "Currently there is no design <$design_name> in project, so creating one..."

  create_bd_design $design_name

  set bCheckIPsPassed 1
  ##################################################################
  # CHECK Modules
  ##################################################################
  set bCheckModules 1
  if { $bCheckModules == 1 } {
     set list_check_mods "\ 
  ahb_master\
  ahb_master\
  ahb_slave\
  ahb_slave\
  arbiter\
  decoder\
  multiplexor\
  write_mux\
  "

   set list_mods_missing ""
   common::send_msg_id "BD_TCL-006" "INFO" "Checking if the following modules exist in the project's sources: $list_check_mods ."

   foreach mod_vlnv $list_check_mods {
      if { [can_resolve_reference $mod_vlnv] == 0 } {
         lappend list_mods_missing $mod_vlnv
      }
   }

   if { $list_mods_missing ne "" } {
      catch {common::send_msg_id "BD_TCL-115" "ERROR" "The following module(s) are not found in the project: $list_mods_missing" }
      common::send_msg_id "BD_TCL-008" "INFO" "Please add source files for the missing module(s) above."
      set bCheckIPsPassed 0
   }
}

  if { $bCheckIPsPassed != 1 } {
    common::send_msg_id "BD_TCL-1003" "WARNING" "Will not continue with creation of design due to the error(s) above."
    return 3
  }

  variable script_folder

  if { $parentCell eq "" } {
     set parentCell [get_bd_cells /]
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj


  # Create interface ports

  # Create ports
  set addr1 [ create_bd_port -dir I -from 31 -to 0 -type data addr1 ]
  set addr2 [ create_bd_port -dir I -from 31 -to 0 addr2 ]
  set clk [ create_bd_port -dir I -type clk clk ]
  set_property -dict [ list \
   CONFIG.FREQ_HZ {50000000} \
 ] $clk
  set din1 [ create_bd_port -dir I -from 31 -to 0 din1 ]
  set din2 [ create_bd_port -dir I -from 31 -to 0 -type data din2 ]
  set dout1 [ create_bd_port -dir O -from 31 -to 0 -type data dout1 ]
  set dout2 [ create_bd_port -dir O -from 31 -to 0 -type data dout2 ]
  set enable1 [ create_bd_port -dir I enable1 ]
  set enable2 [ create_bd_port -dir I enable2 ]
  set resetn [ create_bd_port -dir I -type rst resetn ]
  set_property -dict [ list \
   CONFIG.POLARITY {ACTIVE_LOW} \
 ] $resetn
  set slave_sel1 [ create_bd_port -dir I -from 1 -to 0 slave_sel1 ]
  set slave_sel2 [ create_bd_port -dir I -from 1 -to 0 slave_sel2 ]
  set wcontrol1 [ create_bd_port -dir I wcontrol1 ]
  set wcontrol2 [ create_bd_port -dir I wcontrol2 ]

  # Create instance: ahb_master_0, and set properties
  set block_name ahb_master
  set block_cell_name ahb_master_0
  if { [catch {set ahb_master_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $ahb_master_0 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: ahb_master_1, and set properties
  set block_name ahb_master
  set block_cell_name ahb_master_1
  if { [catch {set ahb_master_1 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $ahb_master_1 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: ahb_slave_0, and set properties
  set block_name ahb_slave
  set block_cell_name ahb_slave_0
  if { [catch {set ahb_slave_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $ahb_slave_0 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: ahb_slave_1, and set properties
  set block_name ahb_slave
  set block_cell_name ahb_slave_1
  if { [catch {set ahb_slave_1 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $ahb_slave_1 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: arbiter_0, and set properties
  set block_name arbiter
  set block_cell_name arbiter_0
  if { [catch {set arbiter_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $arbiter_0 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: decoder_0, and set properties
  set block_name decoder
  set block_cell_name decoder_0
  if { [catch {set decoder_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $decoder_0 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: multiplexor_0, and set properties
  set block_name multiplexor
  set block_cell_name multiplexor_0
  if { [catch {set multiplexor_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $multiplexor_0 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: write_mux_0, and set properties
  set block_name write_mux
  set block_cell_name write_mux_0
  if { [catch {set write_mux_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $write_mux_0 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create port connections
  connect_bd_net -net Net [get_bd_ports clk] [get_bd_pins ahb_master_0/hclk] [get_bd_pins ahb_master_1/hclk] [get_bd_pins ahb_slave_0/hclk] [get_bd_pins ahb_slave_1/hclk] [get_bd_pins arbiter_0/hclk]
  connect_bd_net -net Net1 [get_bd_ports resetn] [get_bd_pins ahb_master_0/hresetn] [get_bd_pins ahb_master_1/hresetn] [get_bd_pins ahb_slave_0/hresetn] [get_bd_pins ahb_slave_1/hresetn] [get_bd_pins arbiter_0/hresetn]
  connect_bd_net -net addr1_1 [get_bd_ports addr1] [get_bd_pins ahb_master_0/addr]
  connect_bd_net -net addr2_1 [get_bd_ports addr2] [get_bd_pins ahb_master_1/addr]
  connect_bd_net -net ahb_master_0_dout [get_bd_ports dout1] [get_bd_pins ahb_master_0/dout]
  connect_bd_net -net ahb_master_0_haddr [get_bd_pins ahb_master_0/haddr] [get_bd_pins write_mux_0/haddr_1]
  connect_bd_net -net ahb_master_0_hburst [get_bd_pins ahb_master_0/hburst] [get_bd_pins ahb_slave_0/hburst] [get_bd_pins ahb_slave_1/hburst]
  connect_bd_net -net ahb_master_0_hready [get_bd_pins ahb_master_0/hready] [get_bd_pins write_mux_0/hready_1]
  connect_bd_net -net ahb_master_0_hreq [get_bd_pins ahb_master_0/hreq] [get_bd_pins arbiter_0/hreq_1]
  connect_bd_net -net ahb_master_0_hwdata [get_bd_pins ahb_master_0/hwdata] [get_bd_pins write_mux_0/hwdata_1]
  connect_bd_net -net ahb_master_0_hwrite [get_bd_pins ahb_master_0/hwrite] [get_bd_pins write_mux_0/hwrite_1]
  connect_bd_net -net ahb_master_0_sel [get_bd_pins ahb_master_0/sel] [get_bd_pins arbiter_0/sel_1]
  connect_bd_net -net ahb_master_1_dout [get_bd_ports dout2] [get_bd_pins ahb_master_1/dout]
  connect_bd_net -net ahb_master_1_haddr [get_bd_pins ahb_master_1/haddr] [get_bd_pins write_mux_0/haddr_2]
  connect_bd_net -net ahb_master_1_hready [get_bd_pins ahb_master_1/hready] [get_bd_pins write_mux_0/hready_2]
  connect_bd_net -net ahb_master_1_hreq [get_bd_pins ahb_master_1/hreq] [get_bd_pins arbiter_0/hreq_2]
  connect_bd_net -net ahb_master_1_hwdata [get_bd_pins ahb_master_1/hwdata] [get_bd_pins write_mux_0/hwdata_2]
  connect_bd_net -net ahb_master_1_hwrite [get_bd_pins ahb_master_1/hwrite] [get_bd_pins write_mux_0/hwrite_2]
  connect_bd_net -net ahb_master_1_sel [get_bd_pins ahb_master_1/sel] [get_bd_pins arbiter_0/sel_2]
  connect_bd_net -net ahb_slave_0_hrdata [get_bd_pins ahb_slave_0/hrdata] [get_bd_pins multiplexor_0/hrdata1]
  connect_bd_net -net ahb_slave_0_hreadyout [get_bd_pins ahb_slave_0/hreadyout] [get_bd_pins multiplexor_0/hreadyout1]
  connect_bd_net -net ahb_slave_0_hresp [get_bd_pins ahb_slave_0/hresp] [get_bd_pins multiplexor_0/hresp1]
  connect_bd_net -net ahb_slave_1_hrdata [get_bd_pins ahb_slave_1/hrdata] [get_bd_pins multiplexor_0/hrdata2]
  connect_bd_net -net ahb_slave_1_hreadyout [get_bd_pins ahb_slave_1/hreadyout] [get_bd_pins multiplexor_0/hreadyout2]
  connect_bd_net -net ahb_slave_1_hresp [get_bd_pins ahb_slave_1/hresp] [get_bd_pins multiplexor_0/hresp2]
  connect_bd_net -net arbiter_0_hgrant_1 [get_bd_pins ahb_master_0/hgrant] [get_bd_pins arbiter_0/hgrant_1] [get_bd_pins write_mux_0/hgrant_1]
  connect_bd_net -net arbiter_0_hgrant_2 [get_bd_pins ahb_master_1/hgrant] [get_bd_pins arbiter_0/hgrant_2] [get_bd_pins write_mux_0/hgrant_2]
  connect_bd_net -net arbiter_0_sel [get_bd_pins arbiter_0/sel] [get_bd_pins decoder_0/sel] [get_bd_pins multiplexor_0/sel]
  connect_bd_net -net decoder_0_hsel_1 [get_bd_pins ahb_slave_0/hsel] [get_bd_pins decoder_0/hsel_1]
  connect_bd_net -net decoder_0_hsel_2 [get_bd_pins ahb_slave_1/hsel] [get_bd_pins decoder_0/hsel_2]
  connect_bd_net -net din1_1 [get_bd_ports din1] [get_bd_pins ahb_master_0/din]
  connect_bd_net -net din2_1 [get_bd_ports din2] [get_bd_pins ahb_master_1/din]
  connect_bd_net -net enable1_1 [get_bd_ports enable1] [get_bd_pins ahb_master_0/enable]
  connect_bd_net -net enable2_1 [get_bd_ports enable2] [get_bd_pins ahb_master_1/enable]
  connect_bd_net -net multiplexor_0_hrdata [get_bd_pins ahb_master_0/hrdata] [get_bd_pins ahb_master_1/hrdata] [get_bd_pins multiplexor_0/hrdata]
  connect_bd_net -net multiplexor_0_hreadyout [get_bd_pins arbiter_0/hready_out] [get_bd_pins multiplexor_0/hreadyout]
  connect_bd_net -net multiplexor_0_hresp1 [get_bd_pins arbiter_0/hresp] [get_bd_pins multiplexor_0/hresp]
  connect_bd_net -net slave_sel1_1 [get_bd_ports slave_sel1] [get_bd_pins ahb_master_0/slave_sel]
  connect_bd_net -net slave_sel2_1 [get_bd_ports slave_sel2] [get_bd_pins ahb_master_1/slave_sel]
  connect_bd_net -net wcontrol1_1 [get_bd_ports wcontrol1] [get_bd_pins ahb_master_0/wr]
  connect_bd_net -net wcontrol2_1 [get_bd_ports wcontrol2] [get_bd_pins ahb_master_1/wr]
  connect_bd_net -net write_mux_0_haddr [get_bd_pins ahb_slave_0/haddr] [get_bd_pins ahb_slave_1/haddr] [get_bd_pins write_mux_0/haddr]
  connect_bd_net -net write_mux_0_hready [get_bd_pins ahb_slave_0/hready] [get_bd_pins ahb_slave_1/hready] [get_bd_pins arbiter_0/hready] [get_bd_pins write_mux_0/hready]
  connect_bd_net -net write_mux_0_hwdata [get_bd_pins ahb_slave_0/hwdata] [get_bd_pins ahb_slave_1/hwdata] [get_bd_pins write_mux_0/hwdata]
  connect_bd_net -net write_mux_0_hwrite [get_bd_pins ahb_slave_0/hwrite] [get_bd_pins ahb_slave_1/hwrite] [get_bd_pins write_mux_0/hwrite]

  # Create address segments

  # Perform GUI Layout
  regenerate_bd_layout -layout_string {
   "ExpandedHierarchyInLayout":"",
   "guistr":"# # String gsaved with Nlview 7.0.19  2019-03-26 bk=1.5019 VDI=41 GEI=35 GUI=JA:9.0 TLS
#  -string -flagsOSRD
preplace port enable1 -pg 1 -lvl 0 -x -310 -y -310 -defaultsOSRD
preplace port clk -pg 1 -lvl 0 -x -310 -y -630 -defaultsOSRD
preplace port resetn -pg 1 -lvl 0 -x -310 -y -610 -defaultsOSRD
preplace port wcontrol1 -pg 1 -lvl 0 -x -310 -y -190 -defaultsOSRD
preplace port enable2 -pg 1 -lvl 0 -x -310 -y 70 -defaultsOSRD
preplace port wcontrol2 -pg 1 -lvl 0 -x -310 -y 130 -defaultsOSRD
preplace portBus dout1 -pg 1 -lvl 5 -x 1820 -y -190 -defaultsOSRD
preplace portBus slave_sel1 -pg 1 -lvl 0 -x -310 -y -210 -defaultsOSRD
preplace portBus addr1 -pg 1 -lvl 0 -x -310 -y -160 -defaultsOSRD
preplace portBus din2 -pg 1 -lvl 0 -x -310 -y 90 -defaultsOSRD
preplace portBus addr2 -pg 1 -lvl 0 -x -310 -y 110 -defaultsOSRD
preplace portBus slave_sel2 -pg 1 -lvl 0 -x -310 -y 150 -defaultsOSRD
preplace portBus din1 -pg 1 -lvl 0 -x -310 -y -240 -defaultsOSRD
preplace portBus dout2 -pg 1 -lvl 5 -x 1820 -y -160 -defaultsOSRD
preplace inst write_mux_0 -pg 1 -lvl 2 -x 560 -y -250 -defaultsOSRD
preplace inst decoder_0 -pg 1 -lvl 2 -x 560 -y -850 -defaultsOSRD
preplace inst arbiter_0 -pg 1 -lvl 1 -x 90 -y -570 -defaultsOSRD
preplace inst ahb_slave_0 -pg 1 -lvl 3 -x 1260 -y -720 -defaultsOSRD
preplace inst ahb_slave_1 -pg 1 -lvl 3 -x 1260 -y -400 -defaultsOSRD
preplace inst multiplexor_0 -pg 1 -lvl 4 -x 1630 -y -930 -defaultsOSRD
preplace inst ahb_master_0 -pg 1 -lvl 1 -x 90 -y -220 -defaultsOSRD
preplace inst ahb_master_1 -pg 1 -lvl 1 -x 90 -y 130 -defaultsOSRD
preplace netloc Net 1 0 3 -280 -730 N -730 780
preplace netloc Net1 1 0 3 -270 -420 280 -440 730
preplace netloc ahb_master_0_sel 1 0 2 -240 -400 240
preplace netloc ahb_master_0_hreq 1 0 2 -230 -720 260
preplace netloc arbiter_0_hgrant_1 1 0 2 -220 -50 290
preplace netloc enable1_1 1 0 1 -240 -310n
preplace netloc ahb_master_0_dout 1 1 4 310 -100 730 -190 N -190 N
preplace netloc slave_sel1_1 1 0 1 -290 -210n
preplace netloc wcontrol1_1 1 0 1 -220 -220n
preplace netloc ahb_master_0_hready 1 1 1 360 -260n
preplace netloc ahb_master_0_haddr 1 1 1 310 -340n
preplace netloc ahb_master_0_hwdata 1 1 1 330 -300n
preplace netloc write_mux_0_haddr 1 2 1 740 -770n
preplace netloc write_mux_0_hwdata 1 2 1 770 -610n
preplace netloc write_mux_0_hready 1 0 3 -220 -430 NJ -430 720
preplace netloc ahb_master_0_hwrite 1 1 1 340 -290n
preplace netloc write_mux_0_hwrite 1 2 1 760 -750n
preplace netloc arbiter_0_sel 1 1 3 280 -770 710 -900 1420
preplace netloc decoder_0_hsel_1 1 2 1 760 -870n
preplace netloc multiplexor_0_hrdata 1 0 5 -230 -40 NJ -40 NJ -40 N -40 1790
preplace netloc multiplexor_0_hreadyout 1 0 5 -260 -1080 NJ -1080 NJ -1080 N -1080 1780
preplace netloc ahb_master_0_hburst 1 1 2 300 -400 790J
preplace netloc arbiter_0_hgrant_2 1 0 2 -220 300 320
preplace netloc ahb_slave_0_hrdata 1 3 1 1410 -1020n
preplace netloc ahb_slave_0_hreadyout 1 3 1 1430 -960n
preplace netloc ahb_slave_0_hresp 1 3 1 1450 -900n
preplace netloc multiplexor_0_hresp1 1 0 5 -250 -760 NJ -760 720J -890 1440J -780 1780
preplace netloc decoder_0_hsel_2 1 2 1 750 -850n
preplace netloc ahb_slave_1_hreadyout 1 3 1 1470 -940n
preplace netloc ahb_slave_1_hresp 1 3 1 1480 -880n
preplace netloc ahb_slave_1_hrdata 1 3 1 1460 -1000n
preplace netloc addr1_1 1 0 1 -250 -240n
preplace netloc enable2_1 1 0 1 N 70
preplace netloc din2_1 1 0 1 N 90
preplace netloc addr2_1 1 0 1 N 110
preplace netloc wcontrol2_1 1 0 1 N 130
preplace netloc slave_sel2_1 1 0 1 -280 150n
preplace netloc ahb_master_1_sel 1 0 2 -230 -410 250
preplace netloc ahb_master_1_haddr 1 1 1 350 -320n
preplace netloc ahb_master_1_hwrite 1 1 1 390 -160n
preplace netloc ahb_master_1_hready 1 1 1 380 -240n
preplace netloc ahb_master_1_hwdata 1 1 1 370 -280n
preplace netloc ahb_master_1_hreq 1 0 2 -220 -710 270
preplace netloc din1_1 1 0 1 -290 -260n
preplace netloc ahb_master_1_dout 1 1 4 400 -90 780J -160 NJ -160 NJ
levelinfo -pg 1 -310 90 560 1260 1630 1820
pagesize -pg 1 -db -bbox -sgen -470 -1120 1960 410
"
}

  # Restore current instance
  current_bd_instance $oldCurInst

  validate_bd_design
  save_bd_design
  close_bd_design $design_name 
}
# End of cr_bd_design_1()
cr_bd_design_1 ""
set_property REGISTERED_WITH_MANAGER "1" [get_files design_1.bd ] 
set_property SYNTH_CHECKPOINT_MODE "Hierarchical" [get_files design_1.bd ] 

# Create 'synth_1' run (if not found)
if {[string equal [get_runs -quiet synth_1] ""]} {
    create_run -name synth_1 -part xc7z020clg484-1 -flow {Vivado Synthesis 2019} -strategy "Vivado Synthesis Defaults" -report_strategy {No Reports} -constrset constrs_1
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs synth_1]
  set_property flow "Vivado Synthesis 2019" [get_runs synth_1]
}
set obj [get_runs synth_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Synthesis Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'synth_1_synth_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs synth_1] synth_1_synth_report_utilization_0] "" ] } {
  create_report_config -report_name synth_1_synth_report_utilization_0 -report_type report_utilization:1.0 -steps synth_design -runs synth_1
}
set obj [get_report_configs -of_objects [get_runs synth_1] synth_1_synth_report_utilization_0]
if { $obj != "" } {

}
set obj [get_runs synth_1]
set_property -name "strategy" -value "Vivado Synthesis Defaults" -objects $obj

# set the current synth run
current_run -synthesis [get_runs synth_1]

# Create 'impl_1' run (if not found)
if {[string equal [get_runs -quiet impl_1] ""]} {
    create_run -name impl_1 -part xc7z020clg484-1 -flow {Vivado Implementation 2019} -strategy "Vivado Implementation Defaults" -report_strategy {No Reports} -constrset constrs_1 -parent_run synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs impl_1]
  set_property flow "Vivado Implementation 2019" [get_runs impl_1]
}
set obj [get_runs impl_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'impl_1_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_io_0] "" ] } {
  create_report_config -report_name impl_1_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_io_0]
if { $obj != "" } {

}
# Create 'impl_1_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_utilization_0] "" ] } {
  create_report_config -report_name impl_1_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_control_sets_0] "" ] } {
  create_report_config -report_name impl_1_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'impl_1_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name impl_1_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_methodology_0] "" ] } {
  create_report_config -report_name impl_1_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_power_0] "" ] } {
  create_report_config -report_name impl_1_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_power_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_route_status_0] "" ] } {
  create_report_config -report_name impl_1_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name impl_1_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs impl_1]
set_property -name "strategy" -value "Vivado Implementation Defaults" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# set the current impl run
current_run -implementation [get_runs impl_1]

puts "INFO: Project created:${_xil_proj_name_}"
# Create 'drc_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "drc_1" ] ] ""]} {
create_dashboard_gadget -name {drc_1} -type drc
}
set obj [get_dashboard_gadgets [ list "drc_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_drc_0" -objects $obj

# Create 'methodology_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "methodology_1" ] ] ""]} {
create_dashboard_gadget -name {methodology_1} -type methodology
}
set obj [get_dashboard_gadgets [ list "methodology_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_methodology_0" -objects $obj

# Create 'power_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "power_1" ] ] ""]} {
create_dashboard_gadget -name {power_1} -type power
}
set obj [get_dashboard_gadgets [ list "power_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_power_0" -objects $obj

# Create 'timing_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "timing_1" ] ] ""]} {
create_dashboard_gadget -name {timing_1} -type timing
}
set obj [get_dashboard_gadgets [ list "timing_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_timing_summary_0" -objects $obj

# Create 'utilization_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "utilization_1" ] ] ""]} {
create_dashboard_gadget -name {utilization_1} -type utilization
}
set obj [get_dashboard_gadgets [ list "utilization_1" ] ]
set_property -name "reports" -value "synth_1#synth_1_synth_report_utilization_0" -objects $obj
set_property -name "run.step" -value "synth_design" -objects $obj
set_property -name "run.type" -value "synthesis" -objects $obj

# Create 'utilization_2' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "utilization_2" ] ] ""]} {
create_dashboard_gadget -name {utilization_2} -type utilization
}
set obj [get_dashboard_gadgets [ list "utilization_2" ] ]
set_property -name "reports" -value "impl_1#impl_1_place_report_utilization_0" -objects $obj

move_dashboard_gadget -name {utilization_1} -row 0 -col 0
move_dashboard_gadget -name {power_1} -row 1 -col 0
move_dashboard_gadget -name {drc_1} -row 2 -col 0
move_dashboard_gadget -name {timing_1} -row 0 -col 1
move_dashboard_gadget -name {utilization_2} -row 1 -col 1
move_dashboard_gadget -name {methodology_1} -row 2 -col 1
